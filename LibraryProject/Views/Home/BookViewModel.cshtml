

@model LibraryProject.Models.BooksFilterModel

@{
    ViewBag.Title = "BooksFilterViewModel";
}
<h4>Books</h4>

<div id="example">
    <div id="grid"></div>
    <script>
        $(document).ready(function () {
            $('#grid').kendoGrid({
                dataSource: { 
                    type:'odata',
                    transport: {
                        read: {
                            url: "/api/Test/GetBook",
                            dataType: "json"
                        }
                    },
                    schema: {                       
                        data: function (data) {
                            return data;
                        },
                        total: function (data) {
                            return data['odata.count'];
                        },
                        model: {
                            fields: {
                                Id: { type: "number" },
                                Name: {type:"string"},
                                Author: {type:"string"},
                                Publisher: {type:"string"},
                                Price:{type:"number"}
                            }
                        }
                    },
                pagesize: 10
            },
                //height: 500,
                //groupable: true,
                sortable: true,
                pageable: {
                    refresh: true,
                    pageSizes: true,
                    buttonCount: 5
                },
                columns: [
                    {
                        field: "Id",
                        title: "Id",
                    },
                    {
                        field: "Name",
                        title: "Name",
                    },
                    {
                        field: "Author",
                        title: "Author",
                    },
                    {
                        field: "Publisher",
                        title: "Publisher",
                    },
                    {
                        field: "Price",
                        title: "Price",
                    }
                ]
            });
        });
    </script>
</div>

<table class="table table-striped table-condensed table-bordered col-md-12">
        <tr>

            <td colspan="1" align="left">
                @if (User.IsInRole("admin"))
                {
                    @Html.ActionLink("Create New", "CreateBook", "Home", new { }, new { @class = "btn btn-sm btn-success " })
                }
            </td>

            <td colspan="4" align="left">
                @using (Html.BeginForm("Index", "Home", FormMethod.Get))
                {
                    <div class="form-inline">
                        @Html.DropDownList("bookPublisher", Model.BooksPublisher as SelectList, htmlAttributes: new { @class = "form-control" })
                        <input type="submit" value="Filtr publisher" class="btn btn-sm btn-primary" />
                    </div>
                }
            </td>
        </tr>
        <tr>
            <th align="left">
                @Html.Label("Name")
            </th>
            <th align="left">
                @Html.Label("Author")
            </th>
            <th align="left">
                @Html.Label("Publisher")
            </th>
            <th align="left">
                @Html.Label("Price")
            </th>
            <th align="left">
                @Html.Label("Action")
            </th>
        </tr>
        @foreach (var item in Model.Books)
        {
            <tr>
                <td align="left">
                    @Html.DisplayFor(modelItem => item.Name)
                </td>
                <td align="left">
                    @Html.DisplayFor(modelItem => item.Author)
                </td>
                <td align="left">
                    @Html.DisplayFor(modelItem => item.Publisher)
                </td>
                <td align="left">
                    @Html.DisplayFor(modelItem => item.Price)
                </td>
                <td align="left">
                    @if (User.IsInRole("admin"))
                    {
                        @Html.ActionLink("Edit book", "EditBook", new { id = item.Id }, new { @class = "btn btn-sm btn-info " })
                    }
                    @Html.ActionLink("Show", "ShowBook", new { id = item.Id }, new { @class = "btn btn-sm btn-info" })
                    @if (User.IsInRole("admin"))
                    {
                        @Html.ActionLink("Delete", "DeleteBook", "Home", new { id = item.Id }, new { @class = "btn btn-sm btn-danger viewDialog ", data_dialog_title = "Delete" })
                    }
                </td>
            </tr>
        }
        <tr>
            <td align="left" colspan="5">
                @Html.ActionLink("Save txt list", "GetBooksList", new { }, new { @class = "btn btn-sm btn-primary button-saver" })
                @Html.ActionLink("Save xml list", "GetBooksXmlList", new { }, new { @class = "btn btn-sm btn-primary button-saver" })
            </td>
        </tr>
    </table>
